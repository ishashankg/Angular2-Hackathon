buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath('org.springframework.boot:spring-boot-gradle-plugin:1.3.3.RELEASE')
	}
}

plugins {
	id "com.moowork.node" version "0.12"
	id "com.moowork.gulp" version "0.12"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
	baseName = 'angular2-hackathon'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-devtools")
	compile('com.google.code.gson:gson:2.6.2')
	compile "org.springframework.social:spring-social-twitter:1.1.2.RELEASE"
	compile("com.fasterxml.jackson.core:jackson-core")
	compile("org.springframework.security:spring-security-crypto:3.1.4.RELEASE")

	testCompile('org.springframework.boot:spring-boot-starter-test')
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

// configure gradle-node-plugin
node {
	version = '6.0.0'
	npmVersion = '3.8.8'
	download = true
	workDir = file("${project.projectDir}/src/main/web/node")
	nodeModulesDir = file("${project.projectDir}/src/main/web")
}

// configure gradle-gulp-plugin
gulp {
	workDir = file("${project.projectDir}/src/main/web")
	colors = true
	bufferOutput = false
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.13'
}

bootRun {
	addResources = true
}

// build front-end before making jar
processResources.dependsOn npmInstall
npmInstall.finalizedBy gulp_build
